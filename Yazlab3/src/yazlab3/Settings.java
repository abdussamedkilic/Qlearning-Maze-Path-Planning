/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package yazlab3;

import static javax.swing.JOptionPane.showMessageDialog;

/**
 *
 * @author Lenovo
 */
public class Settings extends javax.swing.JFrame {

    /**
     * Creates new form Settings
     */
    // with default value
    int MazeSize = 50;
    int startX = 0;
    int startY = 0;
    int endX = 49;
    int endY = 49;
    Maze maze;
    QLearning ql;
    MazeView mv;
    Thread t1, t2;

    public Settings() {
        initComponents();
    }

    public static boolean isNumeric(String string) {
        int intValue;

        //System.out.println(String.format("Parsing string: \"%s\"", string));
        if (string == null || string.equals("")) {
            System.out.println("String cannot be parsed, it is null or empty.");
            return false;
        }

        try {
            intValue = Integer.parseInt(string);
            return true;
        } catch (NumberFormatException e) {
            // System.out.println("Input String cannot be parsed to Integer.");
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        mazeTitle = new javax.swing.JLabel();
        mazeSize = new javax.swing.JTextField();
        StartTitle = new javax.swing.JLabel();
        StartXTitle = new javax.swing.JLabel();
        StartYTitle = new javax.swing.JLabel();
        EndingTitle = new javax.swing.JLabel();
        EndingXTitle = new javax.swing.JLabel();
        EndingYTitle = new javax.swing.JLabel();
        StartX = new javax.swing.JTextField();
        StartY = new javax.swing.JTextField();
        EndX = new javax.swing.JTextField();
        EndY = new javax.swing.JTextField();
        SaveButton = new javax.swing.JLabel();
        episodeViaCost = new javax.swing.JLabel();
        costChart = new javax.swing.JLabel();
        episodeViaStep = new javax.swing.JLabel();
        stepChart = new javax.swing.JLabel();
        showMaze = new javax.swing.JLabel();
        shortestPath = new javax.swing.JLabel();
        backgroundPic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        mazeTitle.setBackground(new java.awt.Color(0, 9, 78));
        mazeTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        mazeTitle.setForeground(new java.awt.Color(255, 0, 0));
        mazeTitle.setText("Enter size of maze : ");
        jPanel1.add(mazeTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, -1, 20));

        mazeSize.setBackground(new java.awt.Color(89, 137, 190));
        mazeSize.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        mazeSize.setForeground(new java.awt.Color(200, 0, 0));
        mazeSize.setText("maze size");
        mazeSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mazeSizeMouseClicked(evt);
            }
        });
        mazeSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mazeSizeActionPerformed(evt);
            }
        });
        jPanel1.add(mazeSize, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        StartTitle.setBackground(new java.awt.Color(0, 9, 78));
        StartTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StartTitle.setForeground(new java.awt.Color(255, 0, 0));
        StartTitle.setText("Starting Points : ");
        jPanel1.add(StartTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, -1, -1));

        StartXTitle.setBackground(new java.awt.Color(0, 9, 78));
        StartXTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StartXTitle.setForeground(new java.awt.Color(255, 0, 0));
        StartXTitle.setText("X : ");
        jPanel1.add(StartXTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        StartYTitle.setBackground(new java.awt.Color(0, 9, 78));
        StartYTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StartYTitle.setForeground(new java.awt.Color(255, 0, 0));
        StartYTitle.setText("Y : ");
        jPanel1.add(StartYTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, -1, -1));

        EndingTitle.setBackground(new java.awt.Color(0, 9, 78));
        EndingTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EndingTitle.setForeground(new java.awt.Color(255, 0, 0));
        EndingTitle.setText("Ending Points : ");
        jPanel1.add(EndingTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, -1, -1));

        EndingXTitle.setBackground(new java.awt.Color(0, 9, 78));
        EndingXTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EndingXTitle.setForeground(new java.awt.Color(255, 0, 0));
        EndingXTitle.setText("X :");
        jPanel1.add(EndingXTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, -1, -1));

        EndingYTitle.setBackground(new java.awt.Color(0, 9, 78));
        EndingYTitle.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EndingYTitle.setForeground(new java.awt.Color(255, 0, 0));
        EndingYTitle.setText("Y : ");
        jPanel1.add(EndingYTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 240, -1, -1));

        StartX.setBackground(new java.awt.Color(89, 137, 190));
        StartX.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StartX.setForeground(new java.awt.Color(200, 0, 0));
        StartX.setText("Sx...");
        StartX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartXMouseClicked(evt);
            }
        });
        jPanel1.add(StartX, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 80, -1));

        StartY.setBackground(new java.awt.Color(89, 137, 190));
        StartY.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        StartY.setForeground(new java.awt.Color(200, 0, 0));
        StartY.setText("Sy...");
        StartY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StartYMouseClicked(evt);
            }
        });
        jPanel1.add(StartY, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 80, -1));

        EndX.setBackground(new java.awt.Color(89, 137, 190));
        EndX.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EndX.setForeground(new java.awt.Color(200, 0, 0));
        EndX.setText("Ex...");
        EndX.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EndXMouseClicked(evt);
            }
        });
        jPanel1.add(EndX, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 200, 80, -1));

        EndY.setBackground(new java.awt.Color(89, 137, 190));
        EndY.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        EndY.setForeground(new java.awt.Color(200, 0, 0));
        EndY.setText("Ey....");
        EndY.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EndYMouseClicked(evt);
            }
        });
        jPanel1.add(EndY, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 240, 80, -1));

        SaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/save-32.png"))); // NOI18N
        SaveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SaveButtonMouseClicked(evt);
            }
        });
        jPanel1.add(SaveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 32, 32));

        episodeViaCost.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        episodeViaCost.setForeground(new java.awt.Color(200, 0, 0));
        episodeViaCost.setText("Episode Via Cost");
        jPanel1.add(episodeViaCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 320, -1, 20));

        costChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/chart-32.png"))); // NOI18N
        costChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                costChartMouseClicked(evt);
            }
        });
        jPanel1.add(costChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 310, -1, -1));

        episodeViaStep.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        episodeViaStep.setForeground(new java.awt.Color(200, 0, 0));
        episodeViaStep.setText("Episode Via Step");
        jPanel1.add(episodeViaStep, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 370, -1, -1));

        stepChart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/chart-32.png"))); // NOI18N
        stepChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stepChartMouseClicked(evt);
            }
        });
        jPanel1.add(stepChart, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 360, -1, -1));

        showMaze.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/showMaze-48.png"))); // NOI18N
        showMaze.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                showMazeMouseClicked(evt);
            }
        });
        jPanel1.add(showMaze, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 330, -1, -1));

        shortestPath.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/shortestPath-48.png"))); // NOI18N
        shortestPath.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                shortestPathMouseClicked(evt);
            }
        });
        jPanel1.add(shortestPath, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 330, -1, -1));

        backgroundPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picture/settings.png"))); // NOI18N
        jPanel1.add(backgroundPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 400));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mazeSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mazeSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mazeSizeActionPerformed

    private void mazeSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mazeSizeMouseClicked
        mazeSize.setText("");
    }//GEN-LAST:event_mazeSizeMouseClicked

    private void StartXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartXMouseClicked
        StartX.setText("");
    }//GEN-LAST:event_StartXMouseClicked

    private void StartYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StartYMouseClicked
        StartY.setText("");
    }//GEN-LAST:event_StartYMouseClicked

    private void EndXMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EndXMouseClicked
        EndX.setText("");
    }//GEN-LAST:event_EndXMouseClicked

    private void EndYMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EndYMouseClicked
        EndY.setText("");
    }//GEN-LAST:event_EndYMouseClicked

    private void SaveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SaveButtonMouseClicked
        String data = mazeSize.getText();
        int count = 0;
        if (isNumeric(data)) {
            MazeSize = Integer.parseInt(data);
            count++;
        } else {
            showMessageDialog(null, "MazeSize Need To be Numeric");
        }

        data = StartX.getText();
        if (isNumeric(data)) {
            startX = Integer.parseInt(data);
            count++;
        } else {
            showMessageDialog(null, "StartX Need To be Numeric");
        }

        data = StartY.getText();
        if (isNumeric(data)) {
            startY = Integer.parseInt(data);
            count++;
        } else {
            showMessageDialog(null, "StartY Need To be Numeric");
        }

        data = EndX.getText();
        if (isNumeric(data)) {
            endX = Integer.parseInt(data);
            count++;
        } else {
            showMessageDialog(null, "EndX Need To be Numeric");
        }

        data = EndY.getText();
        if (isNumeric(data)) {
            endY = Integer.parseInt(data);
            count++;
        } else {
            showMessageDialog(null, "EndY Need To be Numeric");
        }

        if (count == 5) {
            showMessageDialog(null, "Succesfuly Saved");
            maze = new Maze(MazeSize, startX, startY, endX, endY);
            //maze.writeMaze();
            mv = new MazeView(maze.getArr());
            ql = new QLearning(maze.getArr());
            ql.init();
            ql.calculateQ();
            ql.printQ();
            ql.printPolicy();

        }
    }//GEN-LAST:event_SaveButtonMouseClicked

    //  end to show chart don't click x, u will stop the project, that's because
    // there is no backspace for chart gui
    private void costChartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_costChartMouseClicked
        t2 = new Thread(new Runnable() {
            @Override
            public void run() {
                ql.drawCostChart();
            }
        });
        t2.start();
    }//GEN-LAST:event_costChartMouseClicked

    private void stepChartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stepChartMouseClicked
        t1 = new Thread(new Runnable() {
            @Override
            public void run() {
                ql.drawStepChart();
            }
        });
        t1.start();
    }//GEN-LAST:event_stepChartMouseClicked

    private void showMazeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMazeMouseClicked
        // show the maze, prepare maze view
        mv.stop();
        maze.writeMaze();
        mv.run();

    }//GEN-LAST:event_showMazeMouseClicked

    private void shortestPathMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_shortestPathMouseClicked
        mv.stop();
        int startState = startX * MazeSize + startY;
        int endState = endX * MazeSize + endY;
        System.out.println("##### SHORTEST PATH #####");
        char[][] arr = ql.findShortestPath(startState, endState);
        mv.update(arr);
        mv.run();
    }//GEN-LAST:event_shortestPathMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Settings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Settings().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EndX;
    private javax.swing.JTextField EndY;
    private javax.swing.JLabel EndingTitle;
    private javax.swing.JLabel EndingXTitle;
    private javax.swing.JLabel EndingYTitle;
    private javax.swing.JLabel SaveButton;
    private javax.swing.JLabel StartTitle;
    private javax.swing.JTextField StartX;
    private javax.swing.JLabel StartXTitle;
    private javax.swing.JTextField StartY;
    private javax.swing.JLabel StartYTitle;
    private javax.swing.JLabel backgroundPic;
    private javax.swing.JLabel costChart;
    private javax.swing.JLabel episodeViaCost;
    private javax.swing.JLabel episodeViaStep;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField mazeSize;
    private javax.swing.JLabel mazeTitle;
    private javax.swing.JLabel shortestPath;
    private javax.swing.JLabel showMaze;
    private javax.swing.JLabel stepChart;
    // End of variables declaration//GEN-END:variables
}
